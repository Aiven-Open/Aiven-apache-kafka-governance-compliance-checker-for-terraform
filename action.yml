name: 'aiven_terraform_governance_compliance_check'
description: 'GitHub Action to check whether the plan generated by terraform plan complies with governance rules on aiven terraform provider resources.'
author: 'Aiven'

outputs:
  result:
    description: "the compliance result"
    value: ${{ steps.check-governance-compliance.outputs.result }}

inputs:
  GITHUB_TOKEN:
    description: 'A GitHub access token that has permission to read the target pull request.'
    required: true

  AIVEN_API_TOKEN:
    description: 'A Aiven API access token used for terraform plan'
    required: true
  
runs:
  using: "composite"
  steps:
    - name: "Get approvers"
      id: approvers
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    - name: "Checkout branch"
      id: checkout-branch
      uses: actions/checkout@v4

    - name: "Setup terraform"
      id: setup-terraform
      uses: hashicorp/setup-terraform@v3

    - name: "Check compliance"
      id: check-compliance
      run: |
        terraform init
        terraform plan -out=plan -var="aiven_api_token=${{ inputs.AIVEN_API_TOKEN }}"
        terraform show -json plan > ./plan.json
        REQUESTER=${{ github.event.pull_request.user.login }}
        APPROVERS=$(echo '${{ steps.approvers.outputs.data }}' | jq '[.[] | select(.state == "APPROVED") | .user.login] | unique')
        RESULT=$(./build/checker -plan=plan.json -requester=$REQUESTER -approvers=$APPROVERS)
        echo "result=$RESULT" >> "$GITHUB_OUTPUT"
      shell: bash

branding:
  icon: 'shield'
  color: 'orange'